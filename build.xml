<?xml version = "1.0"?>
<project name="web-feature-service" default="compile.src" basedir="." >

  <!-- load external property sets -->
  <property file="default.properties" />

  <!-- classpath -->
  <path id="classpath">
    <fileset dir="${dir.web.lib}" includes="**/*.jar" />
  </path>

  <!-- build date -->
  <tstamp>
    <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
  </tstamp>

  <!-- prepare build -->
  <target name="prepare.build">
    <delete dir="${dir.build}" />
    <mkdir dir="${dir.build.classes}" />
  </target>

  <!-- git revision -->
  <available file=".git" type="dir" property="git.present"/>
  <target name="git.revision" description="Store git revision in ${repository.version}" if="git.present">
    <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
      <arg value="describe"/>
      <arg value="--tags"/>
      <arg value="--always"/>
      <arg value="HEAD"/>
    </exec>
    <condition property="repository.version" value="${git.revision}" else="unknown">
      <and>
        <isset property="git.revision"/>
        <length string="${git.revision}" trim="yes" length="0" when="greater"/>
      </and>
    </condition>   
  </target>

  <!-- Compile Java source code -->
  <target name="compile.src" depends="prepare.build,version.file">
    <javac source="1.8" target="1.8"      
    classpathref="classpath" srcdir="${dir.src}" destdir="${dir.build.classes}"
    includeJavaRuntime="true" createMissingPackageInfoClass="false" failonerror = "true" includeantruntime="false">
      <compilerarg value="-XDignore.symbol.file"/>
    </javac>

    <!-- Create WAR -->
    <war destfile="${dir.build}/citydb-wfs.war"  needxmlfile="false">
      <fileset dir="${dir.web}">
        <include name="**/*.*"/>
        <exclude name="WEB-INF/lib/*.*" />
      </fileset>

      <lib dir = "${dir.web.lib}">
        <exclude name = "javax.servlet-api-3.1.0.jar"/>
      </lib>      
      <classes dir = "${dir.build.classes}"/>
    </war>

    <delete dir="${dir.build.classes}" />   
  </target>

  <target name="version.file" depends="git.revision">
    <!-- Write version info file -->    
    <echo file="${dir.build}/version.txt" append="true">${project.name} (${project.name.short})${line.separator}Build date    ${TODAY}${line.separator}Git revision  ${repository.version}${line.separator}</echo>    
  </target>
</project>